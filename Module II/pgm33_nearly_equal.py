'''Problem 33: Write a function nearly_equal to test whether two strings are nearly equal. Two strings a and b are nearly equal when a can be generated by a single mutation on b.'''






import string
def nearly_equal(x,y):
	result=list()
	alphabets=string.ascii_lowercase
	[result.append(x[:i]+x[i+1:]) for i in range(len(x))]#delete
	[result.append(x[:i]+alpha+x[i:]) for i in range(len(x)) for alpha in alphabets]#insert
	[result.append(x[:i]+alpha+x[i+1:]) for i in range(len(x)+1) for alpha in alphabets]#replacing
	[result.append(x[:i]+x[i+1]+x[i]+x[i+2:]) for i in range(len(x)-1)]#swapping
	return y in result

print nearly_equal('python', 'perl')
print nearly_equal('perl', 'pearl')
print nearly_equal('python', 'jython')
print nearly_equal('man', 'woman')

